@page "/allusers"
@inject HttpClient Http
@attribute [Authorize(Roles = "Admin")]


@if (users is null)
{
    <h5>@message</h5>

}
else
{
    <div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead class="table-dark">
            <tr>
                <th>Email</th>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Blocked</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Email</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Blocked</td>
                </tr>
            }
        </tbody>
    </table>
    </div>
}

@functions {
    private string message = "Loading data...";
    private IEnumerable<UserDTO>? users;

    protected override async Task OnInitializedAsync()
    {
        try {
            users = await Http.GetFromJsonAsync<UserDTO[]>("https://localhost:7263/User");
        }
        catch (Exception exception) {
            if (exception.Message == "Response status code does not indicate success: 401 (Unauthorized).")
            {
                message = "Auth0 temparary unavailable, please try again later";
            }
            else {
                message = exception.Message;
            }
            //message = "Auth0 temporary unavailale, please try again later";
 
        }
        
    }
}